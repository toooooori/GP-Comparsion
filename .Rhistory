remotes::install_url("https://cran.r-project.org/src/contrib/Archive/lineqGPR/lineqGPR_0.1.1.tar.gz")
remotes::install_url("https://cran.r-project.org/src/contrib/Archive/lineqGPR/lineqGPR_0.3.0.tar.gz")
remotes::install_url("https://cran.r-project.org/src/contrib/Archive/lineqGPR/lineqGPR_0.1.1.tar.gz")
remove.packages("lineqGPR")
library(remotes)
remotes::install_github("https://github.com/anfelopera/lineqGPR")
install.packages("C:/Users/Meow/Downloads/lineqGPR-master/lineqGPR_0.3.0.tar.gz", repos = NULL, type = "source")
source("~/GitHub/GP-Comparisons/BF_convex_1d.R")
setwd("~/GitHub/GP-Comparisons")
source("~/GitHub/GP-Comparisons/BF_convex_1d.R")
source("~/GitHub/GP-Comparisons/BF_convex_1d.R")
source("~/GitHub/GP-Comparisons/SR_convex_1d.R")
source("~/GitHub/GP-Comparisons/SR_convex_1d.R")
source("~/GitHub/GP-Comparisons/BF_convex_1d.R")
source("~/GitHub/GP-Comparisons/SR_convex_1d.R")
source("~/GitHub/GP-Comparisons/baseline_convex.R")
source("~/GitHub/GP-Comparisons/baseline_convex.R")
source("~/GitHub/GP-Comparisons/baseline_convex.R")
res$mse
source("~/GitHub/GP-Comparisons/BF_convex_1d.R")
source("~/GitHub/GP-Comparisons/BF_convex_1d.R")
source("~/GitHub/GP-Comparisons/BF_convex_1d.R")
source("~/GitHub/GP-Comparisons/SR_convex_1d.R")
source("~/GitHub/GP-Comparisons/simulate_convex.R")
source("~/GitHub/GP-Comparisons/simulate_convex.R")
source("~/.active-rstudio-document")
install.packages("DiceDesign")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
# 先画真实曲面为浅灰线框（mesh）
persp3D(
x = tgrid, y = tgrid, z = Z_true,
main = "True surface (mesh) + MCMC posterior mean",
xlab = "x1", ylab = "x2", zlab = "y",
facets = FALSE,          # 关闭填充，仅线框
col = "grey85", border = "grey40",
phi = 20, theta = -30, colkey = FALSE
)
# 叠加 MCMC 后验均值面（有颜色，半透明）
persp3D(
x = tgrid, y = tgrid, z = Z_post_mean,
add = TRUE,
col = colormap, alpha = 0.6,   # 半透明叠加
border = NA, colkey = TRUE
)
mse_test <- mean((c(Z_post_mean) - c(Z_true))^2)
mse_test
df_export <- data.frame(
x = rep(tgrid, times = ntest),
y = rep(tgrid, each  = ntest),
z_true = as.vector(Z_true),
z_post_mean = as.vector(Z_post_mean)
)
write.csv(df_export, "bf_2D_results.csv", row.names = FALSE)
source("C:/Users/Meow/Desktop/GP/GP-Comparsion/BF_monotone_2d.R")
source("C:/Users/Meow/Desktop/GP/GP-Comparsion/BF_monotone_2d.R")
source("C:/Users/Meow/Desktop/GP/GP-Comparsion/BF_monotone_2d.R")
source("C:/Users/Meow/Desktop/GP/GP-Comparsion/BF_monotone_2d.R")
source("C:/Users/Meow/Desktop/GP/GP-Comparsion/BF_monotone_2d.R")
mse_test <- mean((c(Z_post_mean) - c(Z_true))^2)
mse_test
cost_time
source("C:/Users/Meow/Desktop/GP/GP-Comparsion/BF_monotone_2d.R")
mse_test
cost_time
